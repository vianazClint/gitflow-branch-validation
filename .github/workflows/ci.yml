name: CI
  
on:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install

      - name: Build
        run: pnpm build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apps-build
          path: |
            apps/**/build
            !apps/**/node_modules
  
  test:
    name: Test Unit
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install

      - name: Test
        run: echo "Test done"
    
  deploy-develop:
    name: Deploy Develop
    needs: test
    environment:
      name: develop
      url: https://web-pipeline-vianaz.s3.amazonaws.com/index.html
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: actions/download-artifact@v4
          with:
            name: apps-build

        - uses: hashicorp/setup-terraform@v3
        - run: terraform init
          working-directory: terraform
        - run: terraform apply -var="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -auto-approve
          working-directory: terraform
            
        - id: tf
          working-directory: terraform
          run: |
            echo "BUCKET=$(terraform output -raw bucket)" >> $GITHUB_OUTPUT
        
        - name: Upload to S3
          run: |
            aws s3 sync ./web/build s3://${{ steps.tf.outputs.BUCKET }}
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: 'us-east-1'
  
  # deploy-staging:
  #   if: ${{ github.event.pull_request.base.ref == 'main' }}
  #   name: Deploy Staging
  #   needs: test
  #   environment:
  #     name: staging
  #     url: https://staging.example.com
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       packages: [backend, web, helper-web, service]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Deploy
  #       run:
  #         sleep 30s && echo "${{ matrix.packages }} deploy done"
  
        
            
    