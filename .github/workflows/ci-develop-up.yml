name: CI / CD Develop PR Opened

env:
  artifact_name: app-build-${{ github.event.pull_request.id }}
  bucket_name: pull-request-${{ github.event.pull_request.id }}

on:
  pull_request: 
    types: [opened, synchronize]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install

      - name: Build
        run: pnpm build

      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: |
            apps/**/build
            !apps/**/node_modules
  
  test:
    name: Test Unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install

      - name: Test
        run: echo "Test done"
    
  deploy-develop-s3:
    name: Deploy PR
    needs: [build, test]
    strategy:
      fail-fast: false
      matrix:
        app: [web, docs]
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: actions/download-artifact@v4
          with:
            name: ${{ env.artifact_name }}

        - uses: hashicorp/setup-terraform@v3

        - name: Terraform Init
          run: terraform init -backend-config="key=${{ matrix.app }}-${{ env.bucket_name }}.tfstate" -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          working-directory: terraform

        - name: Terraform Apply
          run: | 
            terraform apply -var="bucket_name=${{ matrix.app }}-${{ env.bucket_name }}" -var="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -auto-approve
          working-directory: terraform
            
        - id: tf
          name: Export Terraform Outputs
          working-directory: terraform
          run: |
            echo "BUCKET=$(terraform output -raw bucket)" >> $GITHUB_OUTPUT
            echo "DEPLOY_URL=$(terraform output -raw deploy_url)" >> $GITHUB_OUTPUT
        
        - name: Upload ${{ matrix.app }} Build to S3
          run: |
            aws s3 sync ./${{ matrix.app }}/build s3://${{ steps.tf.outputs.BUCKET }}
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: 'us-east-1'

        - name: Comment PR
          uses: thollander/actions-comment-pull-request@v2
          with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            message: |
              Commit ${{ github.event.pull_request.commits[0].message }} has been deployed to ${{ matrix.app }} at ${{ steps.tf.outputs.DEPLOY_URL }} :rocket:

      
  
  # deploy-staging:
  #   if: ${{ github.event.pull_request.base.ref == 'main' }}
  #   name: Deploy Staging
  #   needs: test
  #   environment:
  #     name: staging
  #     url: https://staging.example.com
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       packages: [backend, web, helper-web, service]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Deploy
  #       run:
  #         sleep 30s && echo "${{ matrix.packages }} deploy done"
  
        
            
    